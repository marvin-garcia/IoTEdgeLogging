name: Build and publish .NET Core Function App zip package
on:
  push:
    branches:
    - main
    paths:
    - 'FunctionApp/**'
  workflow_dispatch:
    inputs:
      comment:
        description: "Run comments"
        required: false
env:
  DOTNET_CORE_VERSION: 3.1.x
  WORKING_DIRECTORY: FunctionApp/FunctionApp
  PUBLISH_DIRECTORY: FunctionApp/FunctionApp/bin/Publish
  FLOW_EMAIL: marvin.garcia.b@gmail.com
  FLOW_NAME: "github workflow"
jobs:
  build-and-package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Build
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Restore
      run: dotnet restore ${{ env.WORKING_DIRECTORY }}
    - name: Build
      run: dotnet build /p:DeployOnBuild=true /p:DeployTarget=Package ${{ env.WORKING_DIRECTORY }} --no-restore
    - name: Publish
      run: dotnet publish /p:CreatePackageOnPublish=true -o ${{ env.PUBLISH_DIRECTORY }} ${{ env.WORKING_DIRECTORY }}
    - name: Package
      shell: pwsh
      run: Compress-Archive -Path ${{ env.PUBLISH_DIRECTORY }}/*  -DestinationPath ${{ env.WORKING_DIRECTORY }}/deploy.zip -Update
    - name: Writing SSH private key to local disk
      run: mkdir -p ~/.ssh && echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
    - name: Switching from HTTPS to SSH
      run: git remote set-url origin ${{ secrets.SSH }}
    - name: Check for changes
      run: git status
    - name: Stage changed files
      run: git add ${{ env.WORKING_DIRECTORY }}/deploy.zip
    - name: Set flow email in Git config
      run: git config --global user.email ${{ env.FLOW_EMAIL }}
    - name: Set flow name in Git config
      run: git config --global user.name ${{ env.FLOW_NAME }}
    - name: Commit changed files
      run: git commit -m "Adding Function App zip deploy package"
    - name: Fetch from master
      run: git fetch origin master
    - name: Push code to master
      run: git push origin HEAD:master
# env:
#   AZURE_FUNCTIONAPP_NAME: IoTEdgeLoggingApp
#   AZURE_FUNCTIONAPP_PACKAGE_PATH: FunctionApp\published
#   AZURE_FUNCTIONAPP_PUBLISH_PROFILE: ${{ secrets.IOTEDGELOGGINGAPP }}
#   CONFIGURATION: Release
#   DOTNET_CORE_VERSION: 3.1.x
#   WORKING_DIRECTORY: FunctionApp
# jobs:
#   build-and-deploy:
#     runs-on: windows-latest
#     steps:
#     - uses: actions/checkout@master
#     - name: Setup .NET Core
#       uses: actions/setup-dotnet@v1
#       with:
#         dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
#     - name: Restore
#       run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
#     - name: Build
#       run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
#     - name: Publish
#       run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
#     - name: Deploy to Azure Function App
#       uses: Azure/functions-action@v1
#       with:
#         app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
#         publish-profile: ${{ env.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
#         package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
